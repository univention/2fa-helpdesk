# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

---
apiVersion: "v1"
kind: ConfigMap
metadata:
  name: {{ printf "%s-config" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" ( dict "customLabels" .Values.additionalLabels "context" . ) | nindent 4 }}
  {{- include "nubus-common.annotations.render" ( dict
    "values" ( list .Values.additionalAnnotations )
    "context" . )
    | nindent 2 }}
data:
  OIDC_REALM: "{{ tpl .Values.keycloak.realm . }}"
  OIDC_HOST: "{{ printf "http://%s:%s"
    (required "keycloak.connection.host is required" (tpl .Values.keycloak.connection.host .))
    (required "keycloak.connection.port is required" (tpl .Values.keycloak.connection.port .)) }}"
  OIDC_CLIENT_ID: "{{ tpl .Values.keycloak.client . }}"

  # currently unused #
  UDM_USERNAME: ""
  UDM_PASSWORD: ""
  UDM_HOST: ""

  # Keycloak configuration
  KEYCLOAK_URL: "{{ printf "http://%s:%s"
    (required "keycloak.connection.host is required" (tpl .Values.keycloak.connection.host .))
    (required "keycloak.connection.port is required" (tpl .Values.keycloak.connection.port .)) }}"
  KEYCLOAK_USERNAME: "{{ tpl .Values.keycloak.auth.username . }}"
  KEYCLOAK_REALM_NAME: "{{ tpl .Values.keycloak.realm . }}"
  KEYCLOAK_ADMIN_REALM_NAME: "{{ tpl .Values.keycloak.admin_realm . }}"

  TWOFA_ADMIN_GROUPS: {{ join "," .Values.twofaHelpdeskBackend.config.twofa_admin_groups }}

  PREFIX: "/backend"
  VITE_API_URL: /backend
  VITE_KEYCLOAK_URL: "{{ required "keycloak.connection.url is required" (tpl .Values.keycloak.connection.url .) }}"
  VITE_KEYCLOAK_REALM: "{{ tpl .Values.keycloak.realm . }}"
  VITE_KEYCLOAK_CLIENT_ID: "{{ tpl .Values.keycloak.client . }}"
  VITE_POST_LOGOUT_REDIRECT_URI: "{{ tpl .Values.twofaHelpdeskFrontend.config.postLogoutRedirectURI . }}"
...
---
kind: "ConfigMap"
apiVersion: "v1"
metadata:
  name: {{ printf "%s-nginx" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" ( dict "customLabels" .Values.additionalLabels "context" . ) | nindent 4 }}
  {{- include "nubus-common.annotations.render" ( dict
    "values" ( list .Values.additionalAnnotations )
    "context" . )
    | nindent 2 }}
data:
  nginx.conf: |
    worker_processes  auto;
    error_log  /dev/stderr notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /dev/stdout  main;
        sendfile        on;
        keepalive_timeout  65;
        #gzip  on;

        server {
            listen 80 default_server;
            {{- if not .Values.twofaHelpdeskFrontend.nginx.disableIPv6 }}
            listen [::]:80 default_server;
            {{- end }}
            root /usr/share/nginx/html;
            index index.html index.htm;
            server_name _;
            location /ui/ {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /ui/index.html;
            }
            location / {
                try_files $uri $uri/ =404;
            }
        }
    }
...
