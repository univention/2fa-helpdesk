# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

---
apiVersion: "v1"
kind: ConfigMap
metadata:
  name: {{ printf "%s-config" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.twofaHelpdeskBackend.extraLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.twofaHelpdeskBackend.extraLabels "context" . ) | nindent 4 }}
    {{- end }}
  {{- if .Values.twofaHelpdeskBackend.extraAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.twofaHelpdeskBackend.extraAnnotations "context" . ) | nindent 4 }}
  {{- end }}
data:
  OIDC_HOST: "{{ tpl .Values.twofaHelpdeskBackend.config.keycloak_url . }}"
  OIDC_REALM: "{{ default .Values.global.keycloak.realm (tpl .Values.twofaHelpdeskBackend.config.oidc_realm .) }}"
  OIDC_CLIENT_ID: "{{ tpl .Values.twofaHelpdeskBackend.config.oidc_client . }}"

  # currently unused #
  UDM_USERNAME: ""
  UDM_PASSWORD: ""
  UDM_HOST: ""

  # Keycloak configuration
  KEYCLOAK_URL: "{{ tpl .Values.twofaHelpdeskBackend.config.keycloak_url . }}"
  KEYCLOAK_USERNAME: "{{ tpl .Values.twofaHelpdeskBackend.auth.username . }}"
  KEYCLOAK_REALM_NAME: "{{ default .Values.global.keycloak.realm (tpl .Values.twofaHelpdeskBackend.config.oidc_realm .) }}"
  KEYCLOAK_ADMIN_REALM_NAME: "{{ tpl .Values.twofaHelpdeskBackend.config.keycloak_admin_realm . }}"

  TWOFA_ADMIN_GROUPS: {{ join "," .Values.twofaHelpdeskBackend.config.twofa_admin_groups }}

  PREFIX: "/backend"

  VITE_API_URL: /backend
  VITE_API_TOKEN: test
  VITE_KEYCLOAK_URL: {{ default (printf "https://%s" .Values.twofaHelpdeskBackend.config.oidc_host) (tpl .Values.twofaHelpdeskBackend.config.keycloak_url .) | quote }}
  VITE_KEYCLOAK_REALM: "{{ default .Values.global.keycloak.realm (tpl .Values.twofaHelpdeskBackend.config.oidc_realm .) }}"
  VITE_KEYCLOAK_CLIENT_ID: "{{ tpl .Values.twofaHelpdeskBackend.config.oidc_client . }}"
---
apiVersion: "v1"
kind: ConfigMap
metadata:
  name: {{ printf "%s-init" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.additionalLabels "context" . ) | nindent 4 }}
    {{- end }}
  {{- if .Values.additionalAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.additionalAnnotations "context" . ) | nindent 4 }}
  {{- end }}
data:
  wait-for-keycloak.py: |
    #!/usr/bin/python3
    import requests
    import time
    import sys
    import os

    keycloak_url = os.environ.get('KEYCLOAK_URL') + "/realms/" + os.environ.get('OIDC_REALM')
    max_retries = 300
    retries = 0

    for retry in range(max_retries):
        try:
            response = requests.get(keycloak_url)
            if response.status_code == 200:
                print('Keycloak is available')
                sys.exit(0)
            elif response.status_code == 404:
                print('Realm not ready')
            else:
                print('Unexpected response code: ', response.status_code)
        except requests.exceptions.ConnectionError:
            print('Could not reach keycloak, retrying...')
        time.sleep(1)
    sys.exit(1)
...
