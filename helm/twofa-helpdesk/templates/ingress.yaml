{{- if .Values.ingress.enabled }}
{{- range $index, $ingressConfig := concat .Values.ingress.items .Values.extraIngresses }}
{{- $_ := set $ingressConfig "host" (default $.Values.ingress.host $ingressConfig.host) }}
---
apiVersion: networking.k8s.io/v1
# FIXME: was {{ include "common.capabilities.ingress.apiVersion" $ }}
kind: Ingress
metadata:
  name: {{ printf "%s-%s" (include "common.names.fullname" $) (required "Ingress must have a name. Missing key \"name\" on extraIngress definition." .name) }}
  namespace: {{ include "common.names.namespace" $ }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $.Values.additionalLabels "context" $ ) | nindent 4 }}
  annotations:
    {{- if or .annotations $.Values.additionalAnnotations }}
    {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .annotations $.Values.ingress.annotations $.Values.additionalAnnotations ) "context" $ ) }}
    {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.ingress.certManager.enabled }}
    cert-manager.io/{{ $.Values.ingress.certManager.issuerRef.kind | kebabcase }}: "{{ coalesce $.Values.global.certManagerIssuer $.Values.ingress.certManager.issuerRef.name }}"
    {{- end }}
    #nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: {{ required ".ingressClassName, .Values.ingress.ingressClassName or .Values.global.ingressClass must be defined." ( coalesce .ingressClassName $.Values.ingress.ingressClassName $.Values.global.ingressClass ) | quote }}
  {{- if or .tls.enabled $.Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - twofa{{ tpl .host $ | quote }}
      secretName: "twofa-tls" # FIXME
  {{- end }}
  rules:
    - host: {{ required "The hostname for the ingress has to be set." (tpl .host $) | quote }}
      {{- if .paths }}
      http:
        paths:
          {{- range .paths }}
          - pathType: {{ .pathType }}
            path: {{ tpl .path $ }}
            {{- if .backend }}
            backend:
              service:
                name: "{{ default "" $.Release.Name }}{{ if $.Release.Name }}-{{ end }}{{ .backend.service.name }}"
                port:
                  {{- toYaml .backend.service.port | nindent 18 }}
            {{- else }}
            backend:
              service:
                name: {{ default "" $.Release.Name }}{{ if $.Release.Name }}-{{ end }}{{ include "common.names.fullname" $ }}
                port:
                  name: http
            {{- end }}
          {{- end }}
      {{- end }}

...
{{- end }}
{{- end }}
