# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ printf "%s" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" ( dict "customLabels" .Values.additionalLabels "context" . ) | nindent 4 }}
  {{- include "nubus-common.annotations.render" ( dict
    "values" ( list .Values.additionalAnnotations )
    "context" . )
    | nindent 2 }}
spec:
  replicas: {{ .Values.twofaHelpdeskBackend.replicaCount }}
  selector:
    matchLabels:
      app: {{ printf "%s" (include "common.names.fullname" .) }}
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ printf "%s" (include "common.names.fullname" .) }}
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- with .Values.twofaHelpdeskBackend.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.twofaHelpdeskBackend.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.twofaHelpdeskBackend.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- if or .Values.imagePullSecrets .Values.global.imagePullSecrets  }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
        {{- range .Values.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.fullname" . }}
      {{- end }}
      containers:
      - name: "twofa-helpdesk-backend-api"
        {{- if .Values.twofaHelpdeskBackend.securityContext.enabled }}
        securityContext:
          {{- omit .Values.twofaHelpdeskBackend.securityContext "enabled" | toYaml  | nindent 12 }}
        {{- end }}
        image: "{{ coalesce .Values.twofaHelpdeskBackend.image.registry .Values.global.imageRegistry }}/{{ .Values.twofaHelpdeskBackend.image.repository }}{{ if .Values.twofaHelpdeskBackend.image.sha256 }}@sha256:{{ .Values.twofaHelpdeskBackend.image.sha256 }}{{ else }}:{{ .Values.twofaHelpdeskBackend.image.tag }}{{ end }}"
        imagePullPolicy: {{ coalesce .Values.twofaHelpdeskBackend.image.pullPolicy .Values.global.imagePullPolicy | quote }}

        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: {{ printf "%s-config" (include "common.names.fullname" .) }}
        env:
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "nubus-common.secrets.name" (dict "existingSecret" .Values.keycloak.auth.existingSecret "defaultNameSuffix" "keycloak-credentials" "context" .) | quote }}
                key: {{ include "nubus-common.secrets.key" (dict "existingSecret" .Values.keycloak.auth.existingSecret "key" "adminPassword") | quote }}
        {{- if .Values.twofaHelpdeskBackend.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /backend/
            port: 8080
          initialDelaySeconds: {{ .Values.twofaHelpdeskBackend.probes.liveness.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.twofaHelpdeskBackend.probes.liveness.timeoutSeconds }}
          periodSeconds: {{ .Values.twofaHelpdeskBackend.probes.liveness.periodSeconds }}
          failureThreshold: {{ .Values.twofaHelpdeskBackend.probes.liveness.failureThreshold }}
          successThreshold: {{ .Values.twofaHelpdeskBackend.probes.liveness.successThreshold }}
        {{- end }}
        {{- if .Values.twofaHelpdeskBackend.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /backend/
            port: 8080
          initialDelaySeconds: {{ .Values.twofaHelpdeskBackend.probes.readiness.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.twofaHelpdeskBackend.probes.readiness.timeoutSeconds }}
          periodSeconds: {{ .Values.twofaHelpdeskBackend.probes.readiness.periodSeconds }}
          failureThreshold: {{ .Values.twofaHelpdeskBackend.probes.readiness.failureThreshold }}
          successThreshold: {{ .Values.twofaHelpdeskBackend.probes.readiness.successThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.twofaHelpdeskBackend.resources | nindent 10 }}

...
