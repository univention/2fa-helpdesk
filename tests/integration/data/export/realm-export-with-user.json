[
  {
    "id": "60594c1c-ddcd-468b-854c-a372f2437d0f",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "e78d3971-003e-4f86-96fe-b7b3742c82c8",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "master-realm": [
                "query-groups",
                "view-events",
                "view-authorization",
                "manage-realm",
                "view-users",
                "view-identity-providers",
                "view-realm",
                "manage-identity-providers",
                "query-clients",
                "query-users",
                "create-client",
                "query-realms",
                "view-clients",
                "manage-clients",
                "manage-events",
                "manage-users",
                "impersonation",
                "manage-authorization"
              ],
              "test-realm-realm": [
                "manage-authorization",
                "view-realm",
                "manage-realm",
                "impersonation",
                "create-client",
                "view-events",
                "manage-identity-providers",
                "manage-users",
                "query-users",
                "query-realms",
                "query-clients",
                "view-users",
                "view-identity-providers",
                "view-authorization",
                "manage-clients",
                "manage-events",
                "view-clients",
                "query-groups"
              ]
            }
          },
          "clientRole": false,
          "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f",
          "attributes": {}
        },
        {
          "id": "5d558c17-0a7b-4423-aeac-2b1006e9f032",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f",
          "attributes": {}
        },
        {
          "id": "fb34ea68-152c-489a-8523-36ddac0d2e45",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f",
          "attributes": {}
        },
        {
          "id": "a9e7278c-70de-4c2d-b0e5-6b98870d11ca",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f",
          "attributes": {}
        },
        {
          "id": "17bc6fc3-f363-4db8-8b32-bbb73a9e6c7e",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "eb4f41be-0eb5-4162-9e89-dd6f23863cca",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "4d168929-5fda-43ab-9b23-4e0460a9484c",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "431fa3ed-04a1-49d5-afd9-02dd52078551",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "3f4bbc33-a6d5-4484-8b33-63a62a9901cd",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "0a197f3f-f47d-4b23-bd3e-38f38f687a52",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "d65a580c-9851-4628-ba00-ff708884d0ab",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "e2f52b3c-e8b3-48ca-88af-e07cbbeeb83f",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "66a3f291-0488-4b1f-8087-ec1d11d4a0b5",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "b30671a3-ff46-4e6c-92a7-61fc680a6016",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "90b3e760-a44e-4115-8625-02ea27db8250",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "76bb6ae5-18ca-4163-8715-8188b05ff636",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "a4bec83c-0d77-408d-8a6e-5ee242a4dd62",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "e415ac3e-3a56-41fd-a43b-53450c49589e",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "b91cac42-6fff-41dd-b3dd-bfbd703df2a0",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "141b6712-9e94-4be4-b78e-14e694fa9792",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "03538e19-1b36-402f-9ce5-f25f31501cf1",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "1b5727f4-41c4-40e1-8bd0-34ce7e095421",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "6021ebc4-53ed-4c6f-a17c-239a0f1e653e",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "27198f9c-1b49-46b5-b2ac-715ef42358c5",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          },
          {
            "id": "a7395575-3b89-495d-8509-2a00686aebf7",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "74555ac1-7ebc-4677-bb10-799bf7877ffc",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "56863fb9-e808-40ff-93ec-59cd2a3c8f54",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "604c2a78-7ce5-4cb5-afbb-ccab5ed74505",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "9be74f97-2d05-4ad1-98f0-b327138eedae",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "ae0a069e-b328-4049-934a-9790cea63574",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "d674787c-6aa1-4529-992f-c95658242273",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "d2d5e261-a059-4551-bf04-1d464b95074b",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          },
          {
            "id": "ce391820-e49b-4deb-b4bf-87b87bf4cdd8",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
            "attributes": {}
          }
        ],
        "test-realm-realm": [
          {
            "id": "a699da5d-b3f4-40cf-bfa7-3a7addd7f87c",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "8c75d5c5-9b33-4112-b021-fa36bf6b0d8e",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "7ef20988-be62-4d51-a041-33ccb552a7d9",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "5c9f8e96-8444-45d1-aa3b-f459bd3d232a",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "7eda0149-1c6a-45ee-86b9-49e45ab5e12e",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "4a33e704-3a94-4edd-a7fd-f94b89e3e8ae",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "test-realm-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "2a6eab9e-8d43-4e58-acd8-9b02a133ae22",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "20831f83-98b5-438b-ac4b-c7a39ff6bfb6",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "2252a150-3d2a-4a27-ac31-69dfea644751",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "19a92f6b-c025-4897-a8da-c09dc1550df8",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "acf0bf2a-c4ac-4471-89cf-b5579764c679",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "test-realm-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "e03cf396-9b66-4f2c-ba6b-5d84d457bc8b",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "ce04d0f5-14ed-4809-bd79-8f08753da038",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "5dc05ea0-6451-4df3-a291-d2c1497de833",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "8237c4d4-e89c-4bd2-8523-c3567de7a364",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "20d4576d-475a-45d3-8a2e-8ca5091d3ee3",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "f5770917-1379-4a24-afdd-98b2a17c889c",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          },
          {
            "id": "dbec0af3-89d7-4b02-9376-3f86e626dcaf",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a2b0d442-9790-4b60-b8d1-8622833e599f",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "17bc6fc3-f363-4db8-8b32-bbb73a9e6c7e",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "60594c1c-ddcd-468b-854c-a372f2437d0f"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "29ea8ad5-40fc-4946-990c-bb2590cb68ac",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "576daa73-8e9a-455b-9597-f48143f64261",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "adac25d7-b8b9-436b-8ae7-f8a9d1307f37",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "08bb4ab0-000a-40ea-9b3a-16ab28d82c55",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "4d168929-5fda-43ab-9b23-4e0460a9484c",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ed457c00-2e03-417a-aa1a-8e7d0eb9410f",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "20f7fb51-9ab7-4b25-8e6e-012118a8302f",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "82f2e244-e6c5-4dac-b6ad-b60edda788a7",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a2b0d442-9790-4b60-b8d1-8622833e599f",
        "clientId": "test-realm-realm",
        "name": "test-realm Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      }
    ],
    "clientScopes": [
      {
        "id": "1db5f530-22d3-4fdd-b74a-660bdd0a7c01",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "4239ad2b-9d6a-4980-b53a-17a59bd1e914",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "b1cd347e-1890-4166-9552-e30a7af4804a",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "1fe2a80c-d631-46c7-8899-02555d032d4e",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "38233975-f1db-4a9e-a271-a9f112944286",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d60b338e-9d5f-4bb0-afba-f08c173464ce",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "08dd3f30-6553-4a65-ac70-f776eaa1b462",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "b1442d9f-2e7d-4b91-a2da-0e6211077c7c",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "95f12808-8506-4e8f-99ee-446f4d21e8cd",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "0e6c4d13-2605-4fb2-922a-5aabc3d83bce",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c8b01778-8a86-4be4-967c-2d396e24c282",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c3ebd3f4-93bd-438e-b110-02fdd7c29993",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "bbfee9c4-d933-4214-ac65-0032602405eb",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7ae4d6c3-d80b-4d10-8693-8bc67759c104",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "c515f4e9-4690-406c-9163-3f322249f957",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1c142f9d-3356-4eaf-a1c4-a3dada801d75",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d0c1e89a-9070-4372-9e39-4304ddeeca37",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e7854ab2-e433-4c0a-8c72-299063e3617b",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a85d00b0-815a-4873-a7fe-2821b6e00131",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "bf837838-6394-4c66-836d-f833a493353d",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "657df977-f0f7-4204-b58f-f8c67bbecce4",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "55a6fdcd-5619-4559-8d81-c47e31ba261e",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e82a6313-c078-4bfb-8c96-e1d82757ea24",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "99959d10-c89b-414b-80ac-17b86e65f60b",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "969628bb-8edf-4d17-aca7-f6beb0e8aa6c",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "b39e75fe-b0fd-4f49-b7a2-13c2681614ae",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "79b3c3c2-3aa1-485c-a671-aeb7f8c1df95",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "dc3b4f9d-85ff-4a9d-ab12-efa4abbe246b",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6b251f7c-808e-463c-8d63-6ccfdf3cb08d",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "6ee50d48-2ec8-41ff-bee3-99fbd8118808",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "74b83221-4719-44ed-b396-e342a1ced507",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9dc68691-1434-489a-bc01-c63f77cad6ec",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "d663fe70-a5d6-4bd7-ad9c-2222eec90baf",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "fd55c7eb-e214-45f0-a8ca-9365ab7aa427",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "025b6b56-f941-43e7-acac-d649b3c4d071",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "ae229f92-701f-463d-9f1d-65195eaa317b",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "f8972cc6-2583-4dd5-b479-9c808759ffa5",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "f3f2691a-71b2-4d15-afa7-dfb538170955",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "f821d7ec-6c86-4af6-b70d-65e2f11701d0",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "c205c99f-12e1-458b-a3bd-a0c7e6d9ef30",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "a9d5890a-0fb8-4aab-9856-136d4459a848",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "a0b1457c-da47-49e1-aab7-2a4e2cb19f1f",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "89a508db-17b8-409a-93bb-2b9e4c64b269",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "6d7cd303-74cf-4c1e-ba56-67bbb35b9b64",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "bb52224e-87eb-4901-b8ea-7af9b73aad92",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "b7608226-b0f8-414f-b015-beddcc050093",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "286570cf-4f6e-4f03-96c5-9f75bbdfc4c2",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "22b37aaa-f187-4d5d-aade-d1750b6bc6b2",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "7dd38a71-7c8c-4e08-a8ee-b5d697a9028f",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "df44951a-99bb-4e25-b928-859244fde17d",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "480aa227-b48d-4abd-ae46-11c007c52ae2",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "536e8e22-90ee-4c4a-8690-f27cf658ed08",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "8cefa0c6-0342-46b9-96e6-6ff26a7104ee",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "63041c75-ebd2-419a-a00a-7098d7af03c4",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "55f6bc90-4f3c-4dbd-baa6-9971b7352035",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "edc66155-5ba3-4131-b44e-01e0a9a2b322",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "8dae91dc-4cce-4993-9adf-87f030f45325",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {
            "kc.user.profile.config": [
              "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "42f6e2ef-98e5-43db-81ca-ca0b3d22ed04",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAynJa41NmfoYXhInUsmPd+fCF+kkQqaB0544ukA0GxUU2t2vfVvo6QHrxNxwCtCC4KhbENjnvfd1Xn8O7au/4Pmq9ali3gpCa+CoMuCC4p52dnhSE9R9M1/VdC5gP3/zTKFO5O2cXhoIK8PO+fnji3C5VuR2xFhCRBGAgtj7ZYLo6DpJ7SVfd2TqLT+Xb6i3lqAR6iVoCOhtMA7JJhhQ6Ju3ZPe69BQKF7ZQ8qs6JmJBBcSjCYmGjNo+8JKej5vUtUcBYPchl9kwiWr3wSqptB9K18aISTdsi/oa0ZjCOYmj9SQN3Tfji53VIDK675o6AXT5aCh+1EL7z3muyiauCgwIDAQABAoIBABJN25zhLguziQ3RPntwnyHZluuFzq1fliJXjys0GlAczXExHizpi/nHg+bFMBNkP/KCQ3RZsacyK5mE432sO8g882pZoiH6fCCDAMpnHvr8u8MOvOTC0zpVc3e4ZHsOi3MCeuV9kTl2qZGWoDskJ/Lbd6G4pwnFLq90F5ESxqnBk14/5CZrlV9lfwIESmhrUUDBjMYfp5ABKOoocHDjGhf9fk//Fbrq4RlCvZcs+CZne/9gHEvV96H83mHWUMN7FjHOzKXgpQSyjPnhHoUvh1oVyNrYtoj19zeYVG5fiwHqMfGfzPsDIFiVqE12hGQLI0xyfLIsG6njETsc+e48F/0CgYEA+3hQ8+7T77ZE/HpFw2tN24IBrStJvf8gazv+6KFifL8SufoIn7VDCdQ5jiX8QRITp6MV+9P+fKoKeen4JLEWzJ6bK2aZgh7d6ClgA+fYg2a9Z3kUgbMjOTgVZf/3m4ph89r/cnQuT0e5zzOSbCb/L92qIsAb8SHHhJITapO2um8CgYEAzhf2S3tyl9bXTF2uP3ozEY383ElfUfZMjpgTWZPyIopI+XwLtof+Y0XWuWjdzfEmPfYTIqrj1RdlmLD9G2B5MECHE0c9R/i3MJrSUR9bMFkJQWV0S9FIrdmO1Z3C26rOgv1PUUN2JG6AkcrtGMqTS8ORfOz2tBmIgXUTkI3xky0CgYBW6de455OypyGizbPs/dpUAtQHgQ2ksFgJGBxbVOQQT43uX1+5q1F3RTV7Tt+nsdK/PturRTMQ7UhfqKEONXK22B6zWmu2EGsMAbjgwLIRgGH4MF4JEdwbu6mRrm1rAeInAUsGyOb0mcq7tYxm+vd6GLfj+NfveIhX5pD1ZgZi2wKBgDadJPh1uzU/iohDHwTVRik1vjdF/kuDAGCdLiuDyBudF599XsE9Io1+GVvCzVxgtiifSAzcyklSzOp8pGYX16WQw/q42yVyZGEt9ePnckvKnGhHEV1yFVd0mqRDDTsW9WjC5bz8KpeW7N01sETskcH3DlvTk8DAL2tW8htRch31AoGBAMWm1aH1GyUc+Sh8JPzjH7CwlPv+usZR8R6yuL/CsoHZvIR8bMHGauOsaFzvq7hXZf7oA05ABuodh431YS5xXA4LdS5pIhWr/JaxQqM49htapowho+O/fcmZvivQC+2ACpCb/mecKnNTO8zrS1YizZB2c1suT3927CgTC3Cu9feO"
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGYCSs6vDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwNzE0MTMzOTQ0WhcNMzUwNzE0MTM0MTI0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDKclrjU2Z+hheEidSyY9358IX6SRCpoHTnji6QDQbFRTa3a99W+jpAevE3HAK0ILgqFsQ2Oe993Vefw7tq7/g+ar1qWLeCkJr4Kgy4ILinnZ2eFIT1H0zX9V0LmA/f/NMoU7k7ZxeGggrw875+eOLcLlW5HbEWEJEEYCC2PtlgujoOkntJV93ZOotP5dvqLeWoBHqJWgI6G0wDskmGFDom7dk97r0FAoXtlDyqzomYkEFxKMJiYaM2j7wkp6Pm9S1RwFg9yGX2TCJavfBKqm0H0rXxohJN2yL+hrRmMI5iaP1JA3dN+OLndUgMrrvmjoBdPloKH7UQvvPea7KJq4KDAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAMkUEj9kaeEZhWZNd9g7ljN7G0OHxZ3TBdLULCm8eKSjqIp8RpcOU16KRRv2GIs1DeO1VLbelsvK7A/uN8LZQCbKZtyndZbbUYgC37ILpC3XR5zNkkjDtJWQdR5p4/WdI8udtlp77VSwTensU+uS+7Vj5b49XP7tVLW2fGjaMBaJbjfSYeRUc1rlClSKLwX77+0mo8salqVMyP5Z6W5LV1ihLEXP8WeGqPWflOzStloJmVRD+uH24NipkkmI/C3ku7KVjRr70Ehquut8zS7wBjaZ6/ImpxIde/EDNLBczqFFeEV5u5ydOao2ZlK3YF4ITZ7YzVhvykps+t7ju0WZphE="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "6d55e628-40d1-4d11-b601-b3c44dc927d4",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "f870d412-7ced-4fb7-b44f-be5e8978ed2c"
            ],
            "secret": [
              "3R8TONhwHSnj4btA9ilbxg"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "129709ef-1333-476b-ab38-d3bc67a51b1c",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEoQIBAAKCAQEAxNGPg74Xyrw6eqmOLHchyZuErhsfy1yjyh8pgy64RQCoIBjOHy70VggMWMW0uQ6azWPddnBxtb6/Zaw+cHc0+xwSo9dwuJ3ou2vQpa0u57xA7t8r3H+ook1+9LpOmqJhkUNKsk1LLCE+KnxkQptUhx5+zwoJA8ZyJx3j/9un8j7lKMJ2ydSxpSVvMyRxk5Gv+RS+Vwt1291OkbvJbNgkQicFIPvaPd3dq0E92yym5WJ2vWQYBp9P1Cw0ytb+qC4u4NEvXAl6S2frhLmao6zzGCcyAISHW9fp0OM2cd9VYILl4oyI00hjHIWX0+ssfyQ4DxJUWIVYaXlTveB1QYFNGwIDAQABAoH/AL1aZx217pCbpolba5gNlcqDvblXWAy1c2bhL72iFA0avSXwbxETgrT+ZvIrIXIZpWqYPFAThEDETQ5LLg65zkjST3dh2RAVT0QV4J4v7q1683PNVJAqTjL+307l84H9Eny8f6QLYrTbuOExvLcx+AzZhbs/stGM8Oi3/7G6bKNRL88M1yneWuRGwZmwSMmZSeUMGgqZEXC9gutHwsE2uz8KvCnInvlHcasC9Jobb4iL62qdAZsKF63H6xNFOdqQkLLPiBztelPrlGH0TbRvtyjgia9X5igxwqctuDTAnJQBmLCJgrmIM2xL0IbckReFh7iJIdqDCj8Ue0FaXnBlAoGBAOlhe/UtTO1AKEQGai6xd0ZWDYNj9yZEIZjvHFVI3/cBh29m3gGkCWART0BCi+8UgLpjER8PF12n9EtRsUiFguF8+BHCA2qqtkXsEC9wVYsSf1qkzdaxP4DQLDYt4+j9nyTrIbeYSAoLoEgFDl5InBwLIR5YvIH8Pw6FL6ZufDm/AoGBANfk6knZ1IfZG7ysiZFnHkwVn9YQG5N+JpRfQUgjWeTK2pVpix5uqg4BApsfLtwadfVbhuWt9ili79atkCP+bpJpz60vUHaMZ84M6smq7a9ijJjJgDix1EEl+frTilQYJaav7aEaCyEoUfZit7vGgW9iUHzPmBxU/sABFE6fgyulAoGAToKz76v4qAugQBokWGbtKCVE0IGtoBrlboxp7KriZTcHd8uUPdsQKFhKX+TDLH+qOomfNeKeyqv4u+nUiQAZIoAm99pbyeN6BBXA8CSLMojbfQPaFzJzmYLujJ9tf3Dqu8G6CwhYm8CDgBbrWX51vd1km8/gQp44HEtj10pt0gMCgYBBJ0JVWzm6bZjjTaaOjPIlv/jmnyHTVyTJbh3DaXe9hkKFCL8FRhxn8YIZ0kVQA2RJ0X9aXS+GuebrgKGZWzV/VhNojnjX7fN9yYQprD3iyfjoOxdJBNGrf4x7V8/NJSRns3whPDzTmtlxY8VTE8sIFEF6CSQ8mKHwy+KW/6iUSQKBgQDKIe7O50H3RMrcq8hkz+ULXDLp0z9oDSHvrGpYGRt4u2neQ3ZYj+tVE3JaT6an98t1FOOIBozghzuNbxkuq3EudG1cZOExYu/I221gb+01o+7gqQoPL1OMVaBORVNj7XMpVBi5JFST44vDMQzcRJKO9jpHQhDpK3opdVb+M/eLNg=="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGYCSs7uDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUwNzE0MTMzOTQ1WhcNMzUwNzE0MTM0MTI1WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDE0Y+DvhfKvDp6qY4sdyHJm4SuGx/LXKPKHymDLrhFAKggGM4fLvRWCAxYxbS5DprNY912cHG1vr9lrD5wdzT7HBKj13C4nei7a9ClrS7nvEDu3yvcf6iiTX70uk6aomGRQ0qyTUssIT4qfGRCm1SHHn7PCgkDxnInHeP/26fyPuUownbJ1LGlJW8zJHGTka/5FL5XC3Xb3U6Ru8ls2CRCJwUg+9o93d2rQT3bLKblYna9ZBgGn0/ULDTK1v6oLi7g0S9cCXpLZ+uEuZqjrPMYJzIAhIdb1+nQ4zZx31VgguXijIjTSGMchZfT6yx/JDgPElRYhVhpeVO94HVBgU0bAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE3dV56Wgcsyuuo0W9eNvLNZ9drFkkWLl4ws5JXKsm5ooN7CzP+d/N0Gf0Hklgwo49IkqF+rGtbHh3fcBXdqJ56saIGqnvTp64CSTEBLdyZXlxA1mnFu/bv3ekuenXyzMfp3Yjv6upIVHTzsyVJYAs8QETJPhc2xBkgNzLRvVzB5s8ZR6aEioGeFunIWQq3RIt8KxFqiDAU44DQGkQ+dhSEt6vAm2WVJs+ussk3MW5skwT2yR/eXCWlUjYE8x343j6POyNdbCziazHzgb8PNvI8PrINqOwHFL3cW6vQotMlDEES2Z96TDCNtX0yaZaP7yaLGHxx66eouqplLu2uSpvw="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "71f7d675-cd07-4910-9a67-9b62041b4c50",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "5064b496-7872-48f1-ba8f-90a5748fcbb9"
            ],
            "secret": [
              "AFfTBdeMVozBCiCJl3N5WhTYRBn81RxthZtn658wInCCRh6ysv5O1lV8hFGO_91Y-CRpSbC7-t439pyW3ZE9Hq71TCSdihcvNpU3D3N25JZq_g12Qg6zLDkcaqYcCAtZF0qWNPN39rjh3klwhuQ2Fv-iDIYehruNinGbfozAGkM"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "35ff77b6-9d8d-4f36-b791-8e6d22818873",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "eff5fff2-0066-42cb-8685-c064378a8816",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2b72f811-acb6-4d51-a8dd-73a5c93e4d40",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4c506de1-bad3-425a-8887-b526b944c921",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "07829fb8-29a6-42f4-a503-b17b6d783558",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b48c7b1b-e922-46b1-b764-e25edee39c4a",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "57257940-5db9-4440-9f4a-8574efddcd18",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9533d6d6-bcfb-4ce9-858e-6d0e32518d28",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5820e5ea-a114-417e-bf3a-65bba989b2c8",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0ad06366-61fc-479d-99d9-787b109647e9",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e38bf496-71e5-4329-88f6-1395919260fd",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9ab1c4cc-546b-4785-82f8-e1184432ee56",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "535c4dde-d1b0-4f2a-97d1-b80abac3cef6",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f8a516f2-bb84-4d89-9fb8-c6cc0c35e50c",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "59b3f2af-3790-4926-9485-2d0a75f46b5c",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2e9f3c2e-54b9-47be-a5b4-9f819ec8a4e8",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "cc21cee9-23f7-4e84-a6ab-3a5a2e7028e1",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0b6a52a5-bcb7-44e4-8471-3bb6d49b81bb",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "881b63f6-a57b-4c3a-9714-ccff79bc7f57",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "13290507-81e6-4ab1-8cc2-d5f62c2f139e",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.2.5",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "dd8efd4d-e9ce-4e6c-8230-cbd7e7415245",
    "realm": "test-realm",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "a5df972a-8606-440f-8633-9ff723f1141f",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "dd8efd4d-e9ce-4e6c-8230-cbd7e7415245",
          "attributes": {}
        },
        {
          "id": "15f4fcd6-351d-44fa-b820-769634446e3c",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "dd8efd4d-e9ce-4e6c-8230-cbd7e7415245",
          "attributes": {}
        },
        {
          "id": "7ba38c97-346a-4f6a-8b8c-c20bfdac1315",
          "name": "default-roles-test-realm",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "dd8efd4d-e9ce-4e6c-8230-cbd7e7415245",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "6c38fcef-718f-47b6-b266-da8334ff16e0",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "c09f8c48-b859-46fc-ba21-75a007951a35",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "a3a58650-07ce-4f24-8315-7183e98616bd",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "dcd371d2-5d10-4be3-b6c0-f9b0cf20045f",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "ab1a2fc4-d586-443c-9cbd-25ee46d2f2c0",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "impersonation",
                  "manage-users",
                  "manage-clients",
                  "manage-authorization",
                  "query-users",
                  "view-events",
                  "manage-events",
                  "view-authorization",
                  "create-client",
                  "view-users",
                  "view-identity-providers",
                  "query-realms",
                  "view-realm",
                  "manage-identity-providers",
                  "manage-realm",
                  "query-clients",
                  "query-groups",
                  "view-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "7a517b24-44d4-46d8-8bd1-667744852404",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "37f8052e-58dc-45b5-af32-1fec83330e3d",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "4411e33c-1d2b-4912-8178-106d26fd479f",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "e9e96471-bbcc-4dca-b7bc-4600db7cd737",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "7d783ce4-2e3d-455b-b2ff-cd92acb0e1d2",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "a88fe86a-81f7-40a2-adff-960967950f26",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "5c17c8ad-6215-4c6c-b97d-98580c7c1780",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "4c97a8b7-89ed-438d-9c6e-97de919e5214",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "6fe0cfb3-96f1-4343-b021-51dea1929c14",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "6341aba9-1ce6-4ba8-8a3f-24c9d12ca9c0",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "7ee7a2d5-f78b-45e8-a6ed-74619c6221f8",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "557b7cdc-7f94-488b-8fb4-6357aee65da9",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "caf5e329-7374-4ac8-8cd6-ff10d4c031ad",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          },
          {
            "id": "981d7efd-633b-4eb3-8de1-6dffee89d745",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "65743489-87a0-4510-a1c3-5614aeb09fe1",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "2fa-helpdesk": [],
        "account-console": [],
        "broker": [
          {
            "id": "3220bb8d-c0d4-48f7-97a4-0380b1e568fb",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "c6d51d4b-4368-44fa-b8ab-d05def949097",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "3cb2f7f7-06ec-4b74-9773-86131c61ec56",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "1ed87112-5f00-4ee8-a19e-0f8df11d558b",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "506807c2-0da3-46a0-b15a-2297df5eb130",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "faf254d0-bde4-413c-afed-d62ce74f2b36",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "c071202c-ed79-44c5-aa6a-109a791b06b8",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "314bdfc1-5bf7-4966-99ed-1765730ee769",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "a1684281-4194-432a-ad07-b79160d172c8",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          },
          {
            "id": "8cbf6c8e-f7ce-4eb8-bcbb-66ef53b351ae",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "15969402-9c4f-4240-9557-f9db522d2287",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [
      {
        "id": "e56e9d48-9a4e-49a7-84e9-440319e994e9",
        "name": "2FA Admins",
        "path": "/2FA Admins",
        "subGroups": [],
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {}
      },
      {
        "id": "e1b42ca2-433a-4738-8894-710140e5ea6f",
        "name": "2fa-users",
        "path": "/2fa-users",
        "subGroups": [],
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {}
      }
    ],
    "defaultRole": {
      "id": "7ba38c97-346a-4f6a-8b8c-c20bfdac1315",
      "name": "default-roles-test-realm",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "dd8efd4d-e9ce-4e6c-8230-cbd7e7415245"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "80db4568-5cff-4761-a81f-3b7ecfd9269d",
        "username": "test",
        "firstName": "Testi",
        "lastName": "Testopoula",
        "email": "test@univention.de",
        "emailVerified": false,
        "createdTimestamp": 1752500862694,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "id": "ff3e5210-4b5d-48c3-9b3b-bcfe30a3a6e9",
            "type": "password",
            "userLabel": "My password",
            "createdDate": 1752500946567,
            "secretData": "{\"value\":\"K4OFMOy5T/saDYMWoIbeyB2GrLW6nzAuhJJnFJJHslc=\",\"salt\":\"4gxY5gQ9U5G3vMR4faBspQ==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-test-realm"
        ],
        "notBefore": 0,
        "groups": [
          "/2FA Admins",
          "/2fa-users"
        ]
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "86fec084-9308-4128-bf99-59f4d066d6c8",
        "clientId": "2fa-helpdesk",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "standard.token.exchange.enabled": "false",
          "post.logout.redirect.uris": "*",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "twofa-default",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "15969402-9c4f-4240-9557-f9db522d2287",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/test-realm/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/test-realm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cd78c067-bd68-4574-ba63-4b8e69907fa2",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/test-realm/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/test-realm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "c365f113-4be7-4360-ad4e-f1b698578001",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fd3d1f10-73b6-4893-8c5e-c52de7511d55",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c6d51d4b-4368-44fa-b8ab-d05def949097",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "65743489-87a0-4510-a1c3-5614aeb09fe1",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "02227744-c776-404b-bd9a-476f6949d1c2",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/test-realm/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/test-realm/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "91078c19-1977-448e-9460-d77a8e69128b",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "2a93bdfe-ae6e-4b45-aba9-c96e1b66ff97",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "3e18ee7b-aa25-40f5-be0d-2eacca7ed8db",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "3546fe13-014a-409a-9e21-ba30b85c4b1e",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "2b7adc6d-229a-4174-bd13-628a204aaacc",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0259ccac-8809-4e2f-bd9e-147b04d1d2d7",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "a45618cb-11e7-44de-8dcf-2cb507be22f8",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "cf63a20b-5ad5-4bd4-9e30-198eb656e348",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "71ff1a9f-bbf3-43f7-84cd-db56ab330596",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "0170fcb1-09f6-40a7-b4bf-245e4e66aa20",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "5453af68-ff39-4b52-a043-47879a8fd79b",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "4f5d1565-da2e-42a0-a46d-049438444fc7",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "00d6fb8d-c352-4881-9b1d-d4dff3cd6433",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3f752cde-5f2a-4ad8-9bb6-d962732f6a73",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8d21a94e-40dd-4841-8583-01541f8e24bb",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "18e70302-0b71-44a9-a4bd-3b25bd5fce14",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "038dd0ff-1f27-4e5b-b5d6-3ad37c207e7d",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "cfc96d8b-5de7-43ad-a57b-679df9ab65da",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "029305eb-2bad-4e4b-9adb-004f4cacf9ff",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "cdbb6ab5-54e3-436f-9e8f-ec0c5cb3a501",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f2e6e00d-5773-40eb-9d94-ea9e3b4aa812",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e7dadcea-4587-479a-9bed-b7a403892446",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8c227a13-a968-4b32-8c76-bcb48e9359af",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "11bbef21-62a4-400a-b46e-0ae0ed2f2269",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "297f6abe-c209-49b2-a638-1a55bd6ad79c",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "737c8fb2-ec8a-478a-af29-beae89b26ca6",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1b00d6a4-509d-4f09-b14e-e29b5d172cc1",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "c48a169b-7e5c-4f61-a84c-946e1682b93b",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "22f2a737-92c6-4757-b2ca-e65aaa23e387",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "71be6191-fd1d-472e-ab35-6d101fb2b065",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          }
        ]
      },
      {
        "id": "58da1777-9025-4962-b111-d3be287bd328",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "8bbbe863-bfda-45bf-9a59-29c2a4c03bc4",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "3d190a4d-f43d-44a0-9616-4e2123c94156",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "21dce887-615d-4de6-816c-005f7b71abc5",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "00823659-bc4a-4e45-ba60-ed34534be36f",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1eaeca1a-89fc-4ca8-ba8c-a26a2537e6ca",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "117c8f36-eb94-43f7-8385-8a788416913f",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d6422b68-0387-4783-ae8a-7db24640211d",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "636ea723-2563-446c-8ee9-316f40cdc9d4",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "ed9540b1-ef93-4bcc-aabf-1cc624fdb604",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "384ca06a-6e87-404b-9efd-4551d6466de6",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cc69bf08-c15e-4e05-8d75-06cbbe041177",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "3f56b03d-ee9e-4a3c-bded-249a93382653",
        "name": "twofa-default",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "1e07e0c4-c52f-4587-8732-2758896af9e7",
            "name": "2fa Groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "true",
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "lightweight.claim": "false",
              "access.token.claim": "true",
              "claim.name": "2fa_user_groups"
            }
          }
        ]
      },
      {
        "id": "2fae34b2-f476-456e-97d0-64c412da910d",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "fa9f0f6f-8c3c-4ca7-b002-427600c06d80",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "56d383d9-297e-4b1d-8941-09527cd00b2b",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "bb9db9ac-6d69-4fbd-ad7e-b4afd5128280",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "d2e923f0-2476-4e91-aca6-825b57bbede7",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3f8bb42e-20bf-4b4f-98ac-c3251b4f4d99",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cf3945b8-0d3a-4545-9328-1bec4b5b0891",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "c6055c51-000e-46f0-88fc-9611f700a5d6",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "6384dbf3-2df7-4445-980c-763709ca1060",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "a6a4cddd-7d2a-43eb-a21c-86825484fe2d",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "08ae413e-34b5-435f-8d36-1d955bbd88d6",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "f2d64449-3960-46b1-8e94-222aa521f7cd",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "a5944331-6852-4bf4-94f7-6c87d840436e",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "484e5e6d-4cff-4483-93d0-138de3b84c20",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "9b255b24-d912-4e06-aa6d-3c52dace0bc8",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "6f9d9bce-b71a-49b1-9fae-8616d65c6726",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "11c185c6-18b3-4bc9-b767-a76ba5df752c"
            ],
            "secret": [
              "xSGBxtJINJ3y-uaG9rFcEA"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "2e6e229a-8e23-42a4-9415-09f22b09deea",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAyQbEa+iX7YFBBOnkHyf3+s5MGh834VNHG+nr7Z44stkGuGwYq7FbcWyR2KJ/p7cZoyCv7/bfM1Al06z1VwbGIwx9+mpiJDBlBS4N8pkbS5S9RyFoZk8AmUen0xUh1glS207bvPIAH8IUsgBVe8JnPt/JUzf9eNNGWx4VxVs+tPafRiOUB+gs5aPiHLmyS6yRSxUkbdcce6lTiRa1p0hC1PbXm2dT8qF56u4mzBVvSIrTMXfur37/28LlmNlJUQ/99aRbJo/oHVuaowWQiBUnoMQZAetNy2FfJ6CPK5G06JbQCIoM6IYrxjIiVW8jRelPQgLJ/v0oyb0OfDH8tpkNxwIDAQABAoIBAADNbfJMGuTuNIugwPH6q+vMjHbjV1kKo3NOkz3pwEa+75fD3yUeFrz4OkHtLlspM6y4MfZD34SNh/Z1TANrpI650KazwMptos4K/ROZHd1G345UvqRxdtilyxQZPeK5kHhGbEGTcQ/oR+1sa3ko1QE7agPS3HL/+ARRbl7tltEacHHuoaDp+l+f3CbU9P2TEyKqrmyICEu73bzWXYx3R9PbguX0/aT5xzXCzOrqBmZe7/Ahwg5kdkmd9s0JPK++vqBQxSTWR3Q/pfYJD9OPxjaTKoTx5blNwBJ8Vjj0GW3IXERahKarO860YP/dQye9LmyRU65vAI7W1na71TSLJHUCgYEA7JFZY6V0PX4IrXY91gqKYkLcU6q+vUz1DhonPU3N/dJyWwoYa21N35PS0t8nzHgP9kcDRPdibgjmgNmK6QuGkDLyfRTIvjFtXo1WcobVCT1DtoRBhlwLFbYCSgtrc3hhUPGimV2ONgvcceN8zEnZdbDYw54NKwKwQ7pJ7H1D4QsCgYEA2YoKD8a0WNMuerNswgUpGZgH6Gty5NIEpipIFg+1rIv/pIB0iaJS7pDwlgofnYjFJenUNsFV6RvzogPuQps6PNQVgINPmrMg9/Mx45scWaFEtar5vxVj1hHq/cmq6P6vjKJXKi+WPJH6NmCew2KW1tKXG283+jxqRfwqjk5pc7UCgYBJP2fyFpS7RX7iVq4my/S1IAagUUnlyyJFT4u+y4xwfuyxi5qsCJgIFfk9GaN1B+fJVYuJmx96+n6Eftcn+U2c8GlsmTbezOcUU6bkpyLnTXTd2m1/cJhuDIEA9DA8/JUFPwwdeH5D9cA38zv89RDEBBHZ3+Ir4xU4o0GoW9DcqQKBgEnr7Gtb/GDKslqjqetsUYEO9nD2Qj6bV1UXvRMyF2wgzqgZtoAmlsPWoMp7ei7QER5HDQPmQslJ5EpDx6z+jpWpA/19oYlSIXvgOi27wbB7apvJE8DpBdnykMXYx6kREppZeAEv1n+So1HjF1ARqmwpd4utCXqRGRPbEqL05kSZAoGBALNLqBO18g6mNE9xA+GwefPZeVm1qH4iFcvzfbMCCwMoC0EO1+NrvoEnUgHDA5ZepUGubRzZg+M1dwmeaNo/y1G7zo5xBsExbo+H+6U9itLH4GzNgxNvDtVr3v1BT+Qtouy0H1Mp/pO9GNCcR52oMiE+GjWDAQo/bx5B1gsMAPk8"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICozCCAYsCBgGYCS2DZzANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTI1MDcxNDEzNDIxNFoXDTM1MDcxNDEzNDM1NFowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMkGxGvol+2BQQTp5B8n9/rOTBofN+FTRxvp6+2eOLLZBrhsGKuxW3Fskdiif6e3GaMgr+/23zNQJdOs9VcGxiMMffpqYiQwZQUuDfKZG0uUvUchaGZPAJlHp9MVIdYJUttO27zyAB/CFLIAVXvCZz7fyVM3/XjTRlseFcVbPrT2n0YjlAfoLOWj4hy5skuskUsVJG3XHHupU4kWtadIQtT215tnU/KheeruJswVb0iK0zF37q9+/9vC5ZjZSVEP/fWkWyaP6B1bmqMFkIgVJ6DEGQHrTcthXyegjyuRtOiW0AiKDOiGK8YyIlVvI0XpT0ICyf79KMm9Dnwx/LaZDccCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAVh2g0m0tfFmaMtdXbDz7f0Q2VbeblGepqrig4uqUSqZOj3OXZ/7vfn7MO/laEKf3bAvQ9/bJDTS2madiiydF52J2iGfDCteDutmhco5F0Z5UP4Rqys9Cf5PfD53Yg97Y3H5vk7qg8p4auPUYejSs0qFtsz8OEnxNKGYbpAvpDFsoyN+s8i5hgnYZUMXkzTUw6vv5Nfy4tNO1OvSmIyTbKnpxu5J+/7MshR1r69eWMvv6PUyJWVrAWwtPTRjeOl0fdJ3WPxlbbC9U3IWyj8Qfzdt7XASxgFPU61sL6MHOWYdtONf9NoUTPxZVoO/wOsJxnIlkYhTvUg10+sNoOKK4fA=="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "36985e86-f8e1-4a25-9469-f3ceb67d089b",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "a5eab948-781e-4f43-9ca2-d4c20c97d567"
            ],
            "secret": [
              "e4S1SlKizqZRgzx7LG290mRNUrf0MS9eDH8apFaPDdoIuanz82QOg-otcFDY-HCgMqxLEtzDfLzKUAWMABUsveqiwNbHh98qJTw1FWofzDgcBqE50LjWKXhCmWvGAK-Cho0ru9D6AGjECc5WVF4LJ-ZB45htDTcXIYoxr7SP2ew"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "f448d953-9785-4b24-8050-abffb3412987",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEAiTG4SYb636Vd3pSP3CCR5Jme4YJjxZTTXv9u5uGV2CaLEZTx9pw0PBocNhj4JKx8E2jZhKO+ObrkhDEFUwjqpYGCgjO0DIfIO5wC3CANrx3orYDfRHnrIQVxrzIVGQh8MS8M6psdFUR//wevL+J3abc6mK46AqqARdIJrGk1wGAL1vZfL7lww61bINsTIQUZp1b33uwX2DoxXYD/bW6JtAEJfByzPPiskRrBAVORCcispGHU2nhQlXjplixccK41FJEgEqCknjDeBGCNU5kt7Xqi1xWx8li3MbrYWEumri+gcZp6FvMhCdc2pxJgS2vtPG/uK9c+k4lbxRXW/rdPAwIDAQABAoIBABTHO0z6LNFlvzjFsUq6gr4SPMuUruhZaPCQqSA99tl8xOqNxLOqkV1aQFQ6ezflXl6mLkN2H9+ocZGfxwRTa7j99gvNfthi/C14VxU1pDzrFQv/YlEsUd3MxZyuGMnozL5k4i+Upyv1wEOaIKs/llb5fDNsN7b4UbhsCNuxjNrXYvOtg9dHCa8K43RWLcP4nGO1maHNrnAM+c/W0cR2sml8hoMiiOHqp8nN/YgnxTHRAU083B8MnDSEd2+KmmlySw5CMgWgjY6W1orZwfOaiOE1WW+OI6wc6N17pRry4vSqqkO5jzn9cYDG0TKMk++w8S8oVYHqVYi+tqftTlgCiDkCgYEAwPuRv2Z+zr7DoDuiepAzaSXlxYTu19RakQEIzD87nsrcS1+NIcuWciGaxROsF4eOhmW6XivJXqL2o5MrtxKCIRcTzuV3XkAtVb8o7b5I9uIx3ql1E/SAe+HMU3J0SFsC15KYJA04r5BXjgSWTu+tDnO6Z0oFYr/aoUPgTuliFU0CgYEAtf6AMNOrUWI0Pyh6Z7rBXNQ73igtZ9PHTL2aIE1efdvNXnEP1qf/JxanNpVjG+U6UXuLUv0srFUIekP6vamRqKF+Gc5hCCU10qCZI2vT5SLegUkbRtW5ONWu2ZmGF7XJVWQ8imgkodqscUJQKGRc99V0OxuzUXyWC0stKwb6jY8CgYBpw/aXHcd169svYD+mSI3EnP6XCEoWg823FwgJWMaGOswNiyrAUOH9XymBxUxWAPc99Vb08a6FbW8bKzeUOFKVbB5xEBYh066FBiWaVuWKWWHXlKwT6bbZLmFbgqj0Vtzx5Of5Kj3dCpDRxvXSAU2pVAffQBQ/kMJ0C81Nsl8NKQKBgFvF8q6sjn+DngUbTF5ydn9xJp9ocz0gNigklEwlt7iP1ogBS5NbM/dqHPgRbODsPvRH8IHw2U4tsxC0pwRtNd5rUUOCJrwMx49nHNIX1cp+QuW/D9owfC6E0p84I75hFR3SZhUFXzOfKcYTQoib06XGJc6IsWwt/xvC1QwVgNNRAoGAFCCUJBXFNIp+dODVhPqXFbEfkMvS5GhjHboB56KtGXLtGjdrbmdwCyt487NTJ9TITNqFumtuqwze8JKjs8BWwR2IDxPqVz7zJJ1Fi8FYDTD67nlipf3Ee7orr1zOTVZ6qJwg2ctl0pUzbTrijRiC4godUL0NbBz6QGVpryK9moE="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICozCCAYsCBgGYCS2DADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTI1MDcxNDEzNDIxNFoXDTM1MDcxNDEzNDM1NFowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIkxuEmG+t+lXd6Uj9wgkeSZnuGCY8WU017/bubhldgmixGU8facNDwaHDYY+CSsfBNo2YSjvjm65IQxBVMI6qWBgoIztAyHyDucAtwgDa8d6K2A30R56yEFca8yFRkIfDEvDOqbHRVEf/8Hry/id2m3OpiuOgKqgEXSCaxpNcBgC9b2Xy+5cMOtWyDbEyEFGadW997sF9g6MV2A/21uibQBCXwcszz4rJEawQFTkQnIrKRh1Np4UJV46ZYsXHCuNRSRIBKgpJ4w3gRgjVOZLe16otcVsfJYtzG62FhLpq4voHGaehbzIQnXNqcSYEtr7Txv7ivXPpOJW8UV1v63TwMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAfn1Xka71ER2wYdlXCPBb0bNuw13F9PmkIaxkFkKxM5X4GyYjQC+5b7FmToxmY9A6m61b2DvexpTCZPdFboWhESM3yuf9TWdmpGJ9UqTj6o+sS3WjFz+d5ZvkgOvWATo+Qnc2ghbgK+vyK1ykGGuROJt+ctzhG2XPpT3d/hyP9qYU7tmP/bniK3uNaC/zaZRM3rAi3Q/C2oBmhrqVIvm+NZso0+OmFSTBH53YT9vlXrugW5d9RqfNK9AzTuaXR6lLe2JHbXKJJgS434wHWizIjzXlwF26/0SU3tvqP/RACkyeb4dd3ouOcG2sftElaas+DTzp0CvzrXPhU9OHH3dtIA=="
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "a2bb876c-0964-4a9d-9e0a-63db71be7fec",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bda5a6b9-bc33-42e1-a477-66e719b55af9",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f839c8c2-4fb1-4a93-9e4f-86b8ede1b648",
        "alias": "Browser - Conditional Organization",
        "description": "Flow to determine if the organization identity-first login is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "organization",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "82131af7-32da-482d-8e93-cab0ecfe7c93",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fc6ba4c6-5c49-4482-b9ee-06eb254d60bf",
        "alias": "First Broker Login - Conditional Organization",
        "description": "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "idp-add-organization-member",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "30d2c58c-1d8c-4458-a911-18c4a07cb27a",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "051827db-f6ef-496e-b849-a5bebab50ed0",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b79432b7-8d1b-40c6-847c-6e1488b4f4f5",
        "alias": "Organization",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "491616de-97bb-4fc3-910b-ead26eb17d85",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b8f3113c-14b4-42bb-b9d5-a191f6bf7dff",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0c4a14ee-e7fa-48cb-889d-91307a830463",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8f1f3404-6064-4d3a-8b71-08dabc44b488",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 26,
            "autheticatorFlow": true,
            "flowAlias": "Organization",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "50bd0ee7-b6a0-4284-ad17-f245259aee77",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1748965f-4407-4332-a5ef-ad1afaf7cb9c",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "DISABLED",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f1957493-1f5b-4bcc-8202-da1353582232",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f63ccb33-08c7-43b7-8819-687f173cfb6c",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 50,
            "autheticatorFlow": true,
            "flowAlias": "First Broker Login - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5180e585-1d39-44ff-b2c0-3448844569d8",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "42ac30fa-adcc-41d7-b866-c6320dc961ef",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "858de3d8-6fef-4194-b39a-d518fd3e79df",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f14d60af-ac3a-4895-b7fb-ed3840e8c85e",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "88b8aa4a-2665-4466-81ab-97458aad7c68",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "988ea0c4-b3ca-4fd8-b0dc-2d2e5fb11636",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "22a881a1-f6ee-4716-943b-5d56b21d174c",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.2.5",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]
